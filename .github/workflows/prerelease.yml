name: Publish Preview Package

on:
  push:
    branches: [ master, main, develop ]
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.editorconfig'

jobs:
  build-and-publish-preview:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Required for GitVersion
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          9.0.x
    
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        preferLatestVersion: true

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        useConfigFile: true
        configFilePath: .github/GitVersion.yml
    
    - name: Display GitVersion outputs
      run: |
        echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"
        echo "NuGetVersionV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}"
        echo "NuGetPreReleaseTagV2: ${{ steps.gitversion.outputs.nuGetPreReleaseTagV2 }}"
        echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}"
    
    - name: Set Preview Version
      run: |
        # Use GitVersion's calculated version with a preview suffix
        PREVIEW_VERSION=${{ steps.gitversion.outputs.nuGetVersionV2 }}
        if [[ "$PREVIEW_VERSION" != *"-"* ]]; then
          PREVIEW_VERSION="$PREVIEW_VERSION-preview.${{ github.run_number }}"
        fi
        echo "PREVIEW_VERSION=$PREVIEW_VERSION" >> $GITHUB_ENV
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore --configuration Release /p:Version=${PREVIEW_VERSION}
    
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal
    
    - name: Pack
      run: dotnet pack --no-build --configuration Release /p:Version=${PREVIEW_VERSION} --output nupkgs
    
    - name: Setup NuGet Source
      run: |
        dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
    
    - name: Push to GitHub Packages
      run: dotnet nuget push "./nupkgs/*.nupkg" --source github --skip-duplicate